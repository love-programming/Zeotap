{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdosa\\\\OneDrive\\\\Desktop\\\\Zeotap Assignment\\\\Rule_Engine1\\\\rule-engine\\\\src\\\\components\\\\UpdateRules.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RulesService from '../services/RulesService'; // Ensure this path is correct for your service file\nimport './UpdateRules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rulesService = new RulesService();\nconst UpdateRules = () => {\n  _s();\n  const [ruleId, setRuleId] = useState('');\n  const [ruleName, setRuleName] = useState('');\n  const [ruleString, setRuleString] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send PUT request to update the rule\n      const response = await rulesService.updaterules(ruleId, ruleName, ruleString);\n\n      // Handle success response\n      console.log('Response:', response);\n\n      // Check if the response contains the message\n      if (response && response.message) {\n        setMessage(response.message);\n        setError(''); // Clear error if successful\n        setRuleId('');\n        setRuleName('');\n        setRuleString('');\n      } else {\n        setMessage(''); // Clear message if no success message\n        setError('Update successful but no message provided.');\n      }\n    } catch (error) {\n      // Handle error response\n      setError(`Error: ${error.message || 'Unknown error occurred'}`);\n      setMessage(''); // Clear success message if there's an error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-rule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"update-rule-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ruleId\",\n          children: \"Rule ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ruleId\",\n          value: ruleId,\n          onChange: e => setRuleId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ruleName\",\n          children: \"Rule Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ruleName\",\n          value: ruleName,\n          onChange: e => setRuleName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ruleString\",\n          children: \"Rule String:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"ruleString\",\n          value: ruleString,\n          onChange: e => setRuleString(e.target.value),\n          rows: \"4\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Update Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateRules, \"3HqxZ30hm2/wksc3mc0UMTpbsIM=\");\n_c = UpdateRules;\nexport default UpdateRules;\nvar _c;\n$RefreshReg$(_c, \"UpdateRules\");","map":{"version":3,"names":["React","useState","RulesService","jsxDEV","_jsxDEV","rulesService","UpdateRules","_s","ruleId","setRuleId","ruleName","setRuleName","ruleString","setRuleString","message","setMessage","error","setError","handleSubmit","e","preventDefault","response","updaterules","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/mdosa/OneDrive/Desktop/Zeotap Assignment/Rule_Engine1/rule-engine/src/components/UpdateRules.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RulesService from '../services/RulesService'; // Ensure this path is correct for your service file\r\nimport './UpdateRules.css'\r\nconst rulesService = new RulesService();\r\n\r\nconst UpdateRules = () => {\r\n  const [ruleId, setRuleId] = useState('');\r\n  const [ruleName, setRuleName] = useState('');\r\n  const [ruleString, setRuleString] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Send PUT request to update the rule\r\n      const response = await rulesService.updaterules(ruleId, ruleName, ruleString);\r\n\r\n      // Handle success response\r\n      console.log('Response:', response);\r\n\r\n    // Check if the response contains the message\r\n    if (response && response.message) {\r\n      setMessage(response.message);\r\n      setError(''); // Clear error if successful\r\n      setRuleId('');\r\n      setRuleName('');\r\n      setRuleString('');\r\n    } else {\r\n      setMessage(''); // Clear message if no success message\r\n      setError('Update successful but no message provided.');\r\n    }\r\n  } catch (error) {\r\n    // Handle error response\r\n    setError(`Error: ${error.message || 'Unknown error occurred'}`);\r\n    setMessage(''); // Clear success message if there's an error\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"update-rule-container\">\r\n    <h1>Update Rule</h1>\r\n    <form className=\"update-rule-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"ruleId\">Rule ID:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"ruleId\"\r\n                value={ruleId}\r\n                onChange={(e) => setRuleId(e.target.value)}\r\n                required\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"ruleName\">Rule Name:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"ruleName\"\r\n                value={ruleName}\r\n                onChange={(e) => setRuleName(e.target.value)}\r\n                required\r\n            />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"ruleString\">Rule String:</label>\r\n            <textarea\r\n                id=\"ruleString\"\r\n                value={ruleString}\r\n                onChange={(e) => setRuleString(e.target.value)}\r\n                rows=\"4\"\r\n                required\r\n            />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-btn\">Update Rule</button>\r\n    </form>\r\n\r\n    {message && <p className=\"success-message\">{message}</p>}\r\n    {error && <p className=\"error-message\">{error}</p>}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default UpdateRules;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}