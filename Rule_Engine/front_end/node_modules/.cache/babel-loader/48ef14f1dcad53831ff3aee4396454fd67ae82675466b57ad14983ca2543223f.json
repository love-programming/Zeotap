{"ast":null,"code":"// src/services/RulesService.js\nimport AxiosService from './AxiosService';\nconst axiosService = new AxiosService();\nexport default class RulesService {\n  // Method to create a new rule\n  async createRule(ruleName, ruleString) {\n    const response = await axiosService.post('/create_rule', {\n      rule_name: ruleName,\n      rule_string: ruleString\n    });\n    return response; // Directly return the response as it's already formatted\n  }\n\n  // Method to combine rules\n  async combineRules(ruleIds) {\n    const response = await axiosService.post('/api/combineRules', {\n      rule_ids: ruleIds\n    });\n    return response; // Return combined rules response\n  }\n\n  // Method to evaluate a rule\n  async evaluateRule(ruleId, data) {\n    const response = await axiosService.post('/api/evaluateRule', {\n      rule_id: ruleId,\n      data\n    });\n    return response; // Return evaluation result response\n  }\n}","map":{"version":3,"names":["AxiosService","axiosService","RulesService","createRule","ruleName","ruleString","response","post","rule_name","rule_string","combineRules","ruleIds","rule_ids","evaluateRule","ruleId","data","rule_id"],"sources":["D:/sachin/React_practice/rule-engine/src/services/RulesService.js"],"sourcesContent":["// src/services/RulesService.js\r\nimport AxiosService from './AxiosService';\r\n\r\nconst axiosService = new AxiosService();\r\n\r\nexport default class RulesService {\r\n    // Method to create a new rule\r\n    async createRule(ruleName, ruleString) {\r\n        const response = await axiosService.post('/create_rule', {\r\n            rule_name: ruleName,\r\n            rule_string: ruleString,\r\n        });\r\n        return response; // Directly return the response as it's already formatted\r\n    }\r\n\r\n    // Method to combine rules\r\n    async combineRules(ruleIds) {\r\n        const response = await axiosService.post('/api/combineRules', {\r\n            rule_ids: ruleIds,\r\n        });\r\n        return response; // Return combined rules response\r\n    }\r\n\r\n    // Method to evaluate a rule\r\n    async evaluateRule(ruleId, data) {\r\n        const response = await axiosService.post('/api/evaluateRule', {\r\n            rule_id: ruleId,\r\n            data,\r\n        });\r\n        return response; // Return evaluation result response\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,YAAY,GAAG,IAAID,YAAY,CAAC,CAAC;AAEvC,eAAe,MAAME,YAAY,CAAC;EAC9B;EACA,MAAMC,UAAUA,CAACC,QAAQ,EAAEC,UAAU,EAAE;IACnC,MAAMC,QAAQ,GAAG,MAAML,YAAY,CAACM,IAAI,CAAC,cAAc,EAAE;MACrDC,SAAS,EAAEJ,QAAQ;MACnBK,WAAW,EAAEJ;IACjB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAAC,CAAC;EACrB;;EAEA;EACA,MAAMI,YAAYA,CAACC,OAAO,EAAE;IACxB,MAAML,QAAQ,GAAG,MAAML,YAAY,CAACM,IAAI,CAAC,mBAAmB,EAAE;MAC1DK,QAAQ,EAAED;IACd,CAAC,CAAC;IACF,OAAOL,QAAQ,CAAC,CAAC;EACrB;;EAEA;EACA,MAAMO,YAAYA,CAACC,MAAM,EAAEC,IAAI,EAAE;IAC7B,MAAMT,QAAQ,GAAG,MAAML,YAAY,CAACM,IAAI,CAAC,mBAAmB,EAAE;MAC1DS,OAAO,EAAEF,MAAM;MACfC;IACJ,CAAC,CAAC;IACF,OAAOT,QAAQ,CAAC,CAAC;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}