{"ast":null,"code":"var _jsxFileName = \"D:\\\\sachin\\\\React_practice\\\\rule-engine\\\\src\\\\components\\\\CombineRules.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RulesService from '../services/RulesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rulesService = new RulesService();\nconst handleSubmit = async e => {\n  e.preventDefault();\n  const ids = ruleIds.split(',').map(id => id.trim());\n  try {\n    const response = await rulesService.combineRules(ids);\n    setMessage(response.message); // Ensure this matches the structure of your response\n    setCombinedAST(response.ast); // Ensure this matches the structure of your response\n  } catch (error) {\n    var _error$response, _error$response$data;\n    // Handle error safely\n    const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred';\n    setMessage(`Error: ${errorMsg}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rule IDs (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ruleIds,\n          onChange: e => setRuleIds(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Combine Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), combinedAST && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(combinedAST, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\nexport default CombineRules;","map":{"version":3,"names":["React","useState","axios","RulesService","jsxDEV","_jsxDEV","rulesService","handleSubmit","e","preventDefault","ids","ruleIds","split","map","id","trim","response","combineRules","setMessage","message","setCombinedAST","ast","error","_error$response","_error$response$data","errorMsg","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","setRuleIds","target","combinedAST","JSON","stringify","CombineRules"],"sources":["D:/sachin/React_practice/rule-engine/src/components/CombineRules.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport RulesService from '../services/RulesService';\r\n\r\nconst rulesService = new RulesService();\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const ids = ruleIds.split(',').map(id => id.trim());\r\n  \r\n  try {\r\n    const response = await rulesService.combineRules(ids);\r\n    setMessage(response.message); // Ensure this matches the structure of your response\r\n    setCombinedAST(response.ast); // Ensure this matches the structure of your response\r\n  } catch (error) {\r\n    // Handle error safely\r\n    const errorMsg = error.response?.data?.error || 'An error occurred';\r\n    setMessage(`Error: ${errorMsg}`);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Combine Rules</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Rule IDs (comma-separated):</label>\r\n          <input type=\"text\" value={ruleIds} onChange={(e) => setRuleIds(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Combine Rules</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n      {combinedAST && <pre>{JSON.stringify(combinedAST, null, 2)}</pre>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombineRules;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAG,IAAIH,YAAY,CAAC,CAAC;AACvC,MAAMI,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAMC,GAAG,GAAGC,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,EAAE,IAAIA,EAAE,CAACC,IAAI,CAAC,CAAC,CAAC;EAEnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,YAAY,CAACW,YAAY,CAACP,GAAG,CAAC;IACrDQ,UAAU,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC;IAC9BC,cAAc,CAACJ,QAAQ,CAACK,GAAG,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd;IACA,MAAMC,QAAQ,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACN,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,mBAAmB;IACnEJ,UAAU,CAAC,UAAUO,QAAQ,EAAE,CAAC;EAClC;EAIA,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA;MAAM2B,QAAQ,EAAEzB,YAAa;MAAAoB,QAAA,gBAC3BtB,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UAAAsB,QAAA,EAAO;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1C1B,OAAA;UAAO4B,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEvB,OAAQ;UAACwB,QAAQ,EAAG3B,CAAC,IAAK4B,UAAU,CAAC5B,CAAC,CAAC6B,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACN1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACNZ,OAAO,iBAAId,OAAA;MAAAsB,QAAA,EAAIR;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BO,WAAW,iBAAIjC,OAAA;MAAAsB,QAAA,EAAMY,IAAI,CAACC,SAAS,CAACF,WAAW,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAED,eAAeU,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}