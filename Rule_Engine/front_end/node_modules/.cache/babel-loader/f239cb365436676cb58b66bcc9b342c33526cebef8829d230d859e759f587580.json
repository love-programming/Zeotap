{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdosa\\\\OneDrive\\\\Desktop\\\\Assignmnet Zeotap\\\\Zeotap\\\\Rule_Engine\\\\front_end\\\\src\\\\components\\\\EvulateRules.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RulesService from '../services/RulesService';\nimport './EvulateRules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rulesService = new RulesService();\nconst EvaluateRule = () => {\n  _s();\n  const [ruleId, setRuleId] = useState('');\n  const [data, setData] = useState('');\n  const [message, setMessage] = useState('');\n  const [result, setResult] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const parsedData = JSON.parse(data); // Parse the input data\n      const response = await rulesService.evaluateRule(ruleId, parsedData); // Call API\n      setMessage(response.message); // Set the success message\n      setResult(response.result); // Set the result (true/false)\n      setData('');\n      setRuleId('');\n    } catch (error) {\n      if (error instanceof SyntaxError) {\n        setMessage('Error: Invalid JSON format'); // Handle invalid JSON\n      } else {\n        var _error$response, _error$response$data;\n        setMessage(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred'}`); // Handle API errors\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"evaluate-rule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Evaluate Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"evaluate-rule-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ruleId\",\n          children: \"Rule ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ruleId\",\n          value: ruleId,\n          onChange: e => setRuleId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"data\",\n          children: \"Data (JSON format):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"data\",\n          value: data,\n          onChange: e => setData(e.target.value),\n          rows: \"4\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Evaluate Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `result ${result ? 'true' : 'false'}`,\n      children: [\"Result: \", result ? 'true' : 'false']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(EvaluateRule, \"YwL+y+fozFrgVrnH0latM6efh90=\");\n_c = EvaluateRule;\nexport default EvaluateRule;\nvar _c;\n$RefreshReg$(_c, \"EvaluateRule\");","map":{"version":3,"names":["React","useState","RulesService","jsxDEV","_jsxDEV","rulesService","EvaluateRule","_s","ruleId","setRuleId","data","setData","message","setMessage","result","setResult","handleSubmit","e","preventDefault","parsedData","JSON","parse","response","evaluateRule","error","SyntaxError","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/mdosa/OneDrive/Desktop/Assignmnet Zeotap/Zeotap/Rule_Engine/front_end/src/components/EvulateRules.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RulesService from '../services/RulesService';\r\nimport './EvulateRules.css'\r\n\r\nconst rulesService = new RulesService();\r\n\r\nconst EvaluateRule = () => {\r\n  const [ruleId, setRuleId] = useState('');\r\n  const [data, setData] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const parsedData = JSON.parse(data); // Parse the input data\r\n      const response = await rulesService.evaluateRule(ruleId, parsedData); // Call API\r\n      setMessage(response.message); // Set the success message\r\n      setResult(response.result); // Set the result (true/false)\r\n      setData('');\r\n      setRuleId('');\r\n    } catch (error) {\r\n      if (error instanceof SyntaxError) {\r\n        setMessage('Error: Invalid JSON format'); // Handle invalid JSON\r\n      } else {\r\n        setMessage(`Error: ${error.response?.data?.error || 'An error occurred'}`); // Handle API errors\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"evaluate-rule-container\">\r\n            <h2>Evaluate Rule</h2>\r\n            <form className=\"evaluate-rule-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"ruleId\">Rule ID:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"ruleId\"\r\n                        value={ruleId}\r\n                        onChange={(e) => setRuleId(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"data\">Data (JSON format):</label>\r\n                    <textarea\r\n                        id=\"data\"\r\n                        value={data}\r\n                        onChange={(e) => setData(e.target.value)}\r\n                        rows=\"4\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-btn\">Evaluate Rule</button>\r\n            </form>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            {result !== null && (\r\n                <p className={`result ${result ? 'true' : 'false'}`}>\r\n                    Result: {result ? 'true' : 'false'}\r\n                </p>\r\n            )}\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default EvaluateRule;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}