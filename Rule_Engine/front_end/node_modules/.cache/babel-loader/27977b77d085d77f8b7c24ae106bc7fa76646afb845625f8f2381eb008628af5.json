{"ast":null,"code":"var _jsxFileName = \"D:\\\\sachin\\\\React_practice\\\\rule-engine\\\\src\\\\components\\\\CombineRules.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RulesService from '../services/RulesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rulesService = new RulesService();\nconst CombineRules = () => {\n  _s();\n  const [ruleIds, setRuleIds] = useState('');\n  const [message, setMessage] = useState('');\n  const [combinedAST, setCombinedAST] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const ids = ruleIds.split(',').map(id => id.trim());\n    try {\n      const response = await rulesService.combineRules(ids);\n      setMessage(response.message); // Ensure this matches the structure of your response\n      setCombinedAST(response.ast); // Ensure this matches the structure of your response\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Handle error safely\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred';\n      setMessage(`Error: ${errorMsg}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rule IDs (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ruleIds,\n          onChange: e => setRuleIds(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Combine Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this), combinedAST && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(combinedAST, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CombineRules, \"gfAwriveWy/0K6fXme8p9/D2HY4=\");\n_c = CombineRules;\nexport default CombineRules;\nvar _c;\n$RefreshReg$(_c, \"CombineRules\");","map":{"version":3,"names":["React","useState","axios","RulesService","jsxDEV","_jsxDEV","rulesService","CombineRules","_s","ruleIds","setRuleIds","message","setMessage","combinedAST","setCombinedAST","handleSubmit","e","preventDefault","ids","split","map","id","trim","response","combineRules","ast","error","_error$response","_error$response$data","errorMsg","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/sachin/React_practice/rule-engine/src/components/CombineRules.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport RulesService from '../services/RulesService';\r\n\r\nconst rulesService = new RulesService();\r\nconst CombineRules = () => {\r\n  const [ruleIds, setRuleIds] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [combinedAST, setCombinedAST] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const ids = ruleIds.split(',').map(id => id.trim());\r\n    \r\n    try {\r\n      const response = await rulesService.combineRules(ids);\r\n      setMessage(response.message); // Ensure this matches the structure of your response\r\n      setCombinedAST(response.ast); // Ensure this matches the structure of your response\r\n    } catch (error) {\r\n      // Handle error safely\r\n      const errorMsg = error.response?.data?.error || 'An error occurred';\r\n      setMessage(`Error: ${errorMsg}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Combine Rules</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Rule IDs (comma-separated):</label>\r\n          <input type=\"text\" value={ruleIds} onChange={(e) => setRuleIds(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Combine Rules</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n      {combinedAST && <pre>{JSON.stringify(combinedAST, null, 2)}</pre>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombineRules;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}